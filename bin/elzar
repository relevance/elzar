#!/usr/bin/env ruby
require 'gli'
begin # XXX: Remove this begin/rescue before distributing your app
  require 'elzar/cli'
rescue LoadError
  STDERR.puts "In development, you need to use `bundle exec bin/elzar` to run your app"
  STDERR.puts "At install-time, RubyGems will make sure lib, etc. are in the load path"
  STDERR.puts "Feel free to remove this message from bin/elzar now"
  exit 64
end

include GLI::App

program_desc 'Describe your application here'

version Elzar::VERSION

desc 'Sets up default provisioning skeleton'
command :init do |c|
  c.flag :dna,
    :default_value => 'rails',
    :arg_name => 'dna',
    :must_match => %w[clojure rails], # TODO Dynamically determine the list of available DNAs
    :desc => 'The application stack you wish to deploy'

  c.action do |global_options,options,args|
    Elzar::Cli.install(global_options.merge(options), args)
  end
end

desc 'Describe preheat here'
arg_name 'Describe arguments to provision here'
command :preheat do |c|
  c.action do |global_options,options,args|
    puts "preheat command ran"
  end
end

desc 'Describe cook here'
arg_name 'Describe arguments to cook here'
command :cook do |c|
  c.action do |global_options,options,args|
    puts "cook command ran"
  end
end

pre do |global,command,options,args|
  # Pre logic here
  # Return true to proceed; false to abourt and not call the
  # chosen command
  # Use skips_pre before a command to skip this block
  # on that command only
  true
end

post do |global,command,options,args|
  # Post logic here
  # Use skips_post before a command to skip this
  # block on that command only
end

on_error do |exception|
  # Error logic here
  # return false to skip default error handling
  true
end

exit run(ARGV)
